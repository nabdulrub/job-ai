// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  email          String   @unique
  hashedPassword String?
  firstname      String
  lastname       String
  location       String?
  phone          String?
  createdAt      DateTime @default(now()) @db.Timestamp()
  updatedAt      DateTime @updatedAt @db.Timestamp()
  relatedResumes Resume[]

  stripeCustomerId       String?           @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?           @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?           @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime?         @map(name: "stripe_current_period_end")
  GeneratedResume        GeneratedResume[]
}

model Newsletter {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
}

model Resume {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  jobs      Job[]
  projects  Project[]
  skills    Skill[]
  education Education[]
  userId    String      @db.ObjectId

  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
}

model Job {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  employer    String?
  location    String?
  startMonth  String?
  startYear   Int?
  endMonth    String?
  endYear     Int?
  present     Boolean?
  description String?
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt @db.Timestamp()

  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String  @db.ObjectId
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  location    String?
  startMonth  String?
  startYear   Int?
  endMonth    String?
  endYear     Int?
  description String?
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt @db.Timestamp()

  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String  @db.ObjectId
}

model Skill {
  id   String  @id @default(auto()) @map("_id") @db.ObjectId
  name String?

  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String  @db.ObjectId
}

model Education {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  school          String?
  degree          String?
  gpa             Int?
  location        String?
  graduationMonth String?
  graduationYear  Int?
  createdAt       DateTime @default(now()) @db.Timestamp()
  updatedAt       DateTime @updatedAt @db.Timestamp()

  Resume   Resume? @relation(fields: [resumeId], references: [id])
  resumeId String  @db.ObjectId
}

model GeneratedResume {
  id          String               @id @default(auto()) @map("_id") @db.ObjectId
  user        User                 @relation(fields: [userId], references: [id])
  title       String?
  description String?
  jobs        GeneratedJob[]
  projects    GeneratedProject[]
  skills      GeneratedSkill[]
  education   GeneratedEducation[]
  userId      String               @db.ObjectId
  createdAt   DateTime             @default(now()) @db.Timestamp()
  updatedAt   DateTime             @updatedAt @db.Timestamp()
}

model GeneratedJob {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  employer    String?
  location    String?
  dateRange   String?
  description String?
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt @db.Timestamp()

  GeneratedResume   GeneratedResume? @relation(fields: [generatedResumeId], references: [id])
  generatedResumeId String?          @db.ObjectId
}

model GeneratedProject {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String?
  location    String?
  dateRange   String?
  description String?
  createdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt   DateTime @updatedAt @db.Timestamp()

  GeneratedResume   GeneratedResume? @relation(fields: [generatedResumeId], references: [id])
  generatedResumeId String?          @db.ObjectId
}

model GeneratedSkill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()

  GeneratedResume   GeneratedResume? @relation(fields: [generatedResumeId], references: [id])
  generatedResumeId String?          @db.ObjectId
}

model GeneratedEducation {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  school         String?
  degree         String?
  location       String?
  graduationDate String?
  createdAt      DateTime @default(now()) @db.Timestamp()
  updatedAt      DateTime @updatedAt @db.Timestamp()

  GeneratedResume   GeneratedResume? @relation(fields: [generatedResumeId], references: [id])
  generatedResumeId String?          @db.ObjectId
}
